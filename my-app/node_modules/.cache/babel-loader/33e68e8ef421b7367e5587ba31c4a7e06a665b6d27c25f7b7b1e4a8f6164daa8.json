{"ast":null,"code":"var _jsxFileName = \"/Users/nikolaanachkov/Desktop/book-prj-ts/my-app/src/BookComponent/BookPageComponent2.tsx\",\n  _s = $RefreshSig$();\nimport \"./bookPageComponent.css\";\nimport booksInfo from \"../api/booksInfo\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookPageComponent2 = () => {\n  _s();\n  //useState for the transfer of the JSON data:\n  const [info, setInfo] = useState([]);\n  //the next 3 \"useState\" are used for - 1. total pages of the book(which is already set, so the user knows how many pages is the book)\n  //2. The second useState is for the pages that have been read by the user\n  //3. The third useState is for if the book is available\n  const [totalPages, setTotalPages] = useState(512);\n  const [pagesRead, setPagesRead] = useState(parseInt(localStorage.getItem(\"Component2 - pagesRead\") || \"0\", 10));\n  const [isAvailable, setIsAvailable] = useState(localStorage.getItem(\"Component2 - isAvailable\") === \"true\");\n\n  //useEffect that is used for saving the user input, and if the book is available on the bookstore\n  useEffect(() => {\n    localStorage.setItem(\"Component2 - pagesRead\", pagesRead.toString());\n    localStorage.setItem(\"Component2 - isAvailable\", isAvailable.toString());\n  }, [pagesRead, isAvailable]);\n\n  //Calculating the percentage of the remaining pages\n  const calculatePercentage = () => {\n    const remainingPages = totalPages - pagesRead;\n    return (remainingPages / totalPages * 100).toFixed(2) + \"%\";\n  };\n\n  //handlePagesReadChange is used for the input where the user is entering how many pages he had read\n  //The user can delete, add and most importantly, cannot go over the pages that the book is set to!\n  const handlePagesReadChange = e => {\n    const newPagesRead = e.target.value === \"\" ? 0 : parseInt(e.target.value, 10);\n    if (newPagesRead <= totalPages) {\n      setPagesRead(newPagesRead);\n    }\n  };\n\n  //Fetching data from the JSON file\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await booksInfo.get(\"http://localhost:3000/data/2\");\n        setInfo([res.data]);\n        setTotalPages(res.data.pages);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [info.map((obj, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerSecond\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: obj.source,\n          alt: \"i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: obj.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: obj.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: obj.shortDesctiption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"fontAndSize\",\n            children: \"Total pages: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: totalPages,\n            onChange: e => setTotalPages(parseInt(e.target.value, 10))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"fontAndSize\",\n            children: \"Pages read:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: pagesRead,\n            onChange: handlePagesReadChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Remaining pages percentage: \", calculatePercentage()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-wrapper-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"input\",\n          className: \"sc-gJwTLC ikxBAC\",\n          checked: isAvailable,\n          onChange: e => setIsAvailable(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"fontAndSize\",\n          children: \"Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(BookPageComponent2, \"KDRs4PrMT37i1GKGfhYHPR4RfaI=\");\n_c = BookPageComponent2;\nexport default BookPageComponent2;\nvar _c;\n$RefreshReg$(_c, \"BookPageComponent2\");","map":{"version":3,"names":["booksInfo","React","useEffect","useState","BookPageComponent2","info","setInfo","totalPages","setTotalPages","pagesRead","setPagesRead","parseInt","localStorage","getItem","isAvailable","setIsAvailable","setItem","toString","calculatePercentage","remainingPages","toFixed","handlePagesReadChange","e","newPagesRead","target","value","fetchData","res","get","data","pages","console","log","map","obj","i","source","title","author","shortDesctiption","checked"],"sources":["/Users/nikolaanachkov/Desktop/book-prj-ts/my-app/src/BookComponent/BookPageComponent2.tsx"],"sourcesContent":["import \"./bookPageComponent.css\";\nimport booksInfo from \"../api/booksInfo\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface NewComponentProps {\n  index: number;\n}\n\nconst BookPageComponent2: React.FC<NewComponentProps> = () => {\n  //useState for the transfer of the JSON data:\n  const [info, setInfo] = useState([] as any[]);\n  //the next 3 \"useState\" are used for - 1. total pages of the book(which is already set, so the user knows how many pages is the book)\n  //2. The second useState is for the pages that have been read by the user\n  //3. The third useState is for if the book is available\n  const [totalPages, setTotalPages] = useState(512);\n\n  const [pagesRead, setPagesRead] = useState(\n    parseInt(localStorage.getItem(\"Component2 - pagesRead\") || \"0\", 10)\n  );\n  const [isAvailable, setIsAvailable] = useState(\n    localStorage.getItem(\"Component2 - isAvailable\") === \"true\"\n  );\n\n  //useEffect that is used for saving the user input, and if the book is available on the bookstore\n  useEffect(() => {\n    localStorage.setItem(\"Component2 - pagesRead\", pagesRead.toString());\n    localStorage.setItem(\"Component2 - isAvailable\", isAvailable.toString());\n  }, [pagesRead, isAvailable]);\n\n  //Calculating the percentage of the remaining pages\n  const calculatePercentage = () => {\n    const remainingPages = totalPages - pagesRead;\n    return ((remainingPages / totalPages) * 100).toFixed(2) + \"%\";\n  };\n\n  //handlePagesReadChange is used for the input where the user is entering how many pages he had read\n  //The user can delete, add and most importantly, cannot go over the pages that the book is set to!\n  const handlePagesReadChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newPagesRead =\n      e.target.value === \"\" ? 0 : parseInt(e.target.value, 10);\n    if (newPagesRead <= totalPages) {\n      setPagesRead(newPagesRead);\n    }\n  };\n\n  //Fetching data from the JSON file\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await booksInfo.get(\"http://localhost:3000/data/2\");\n        setInfo([res.data]);\n        setTotalPages(res.data.pages);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {info.map((obj, i) => {\n        return (\n          <div key={i} className=\"containerSecond\">\n            <img src={obj.source} alt=\"i\" />\n            <div>\n              <h1>{obj.title}</h1>\n              <h2>{obj.author}</h2>\n              <p>{obj.shortDesctiption}</p>\n            </div>\n          </div>\n        );\n      })}\n      <div className=\"bottom\">\n        <div>\n          <div>\n            <label className=\"fontAndSize\">Total pages: </label>\n            <input\n              type=\"number\"\n              value={totalPages}\n              onChange={(e) => setTotalPages(parseInt(e.target.value, 10))}\n            />\n          </div>\n          <div>\n            <label className=\"fontAndSize\">Pages read:</label>\n            <input\n              type=\"number\"\n              value={pagesRead}\n              onChange={handlePagesReadChange}\n            />\n          </div>\n          <div>\n            <p>Remaining pages percentage: {calculatePercentage()}</p>\n          </div>\n        </div>\n        <div className=\"checkbox-wrapper-2\">\n          <input\n            type=\"checkbox\"\n            id=\"input\"\n            className=\"sc-gJwTLC ikxBAC\"\n            checked={isAvailable}\n            onChange={(e) => setIsAvailable(e.target.checked)}\n          />\n          <label className=\"fontAndSize\">Available</label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BookPageComponent2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}